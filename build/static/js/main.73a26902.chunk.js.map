{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","components/pages/AllQuotes.jsx","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuotes.jsx","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetails.jsx","components/layout/MainNavigation.jsx","components/layout/Layout.jsx","components/pages/NotFound.jsx","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","Ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEnterd","setisEnterd","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuotes","console","log","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","QuoteDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73a26902.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1uQlJ\",\"loading\":\"QuoteForm_loading__OQX_V\",\"control\":\"QuoteForm_control__3hC9I\",\"actions\":\"QuoteForm_actions__1iHBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__11Z8C\",\"logo\":\"MainNavigation_logo__LEAE0\",\"nav\":\"MainNavigation_nav__1thCi\",\"active\":\"MainNavigation_active__s6lkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3JLog\",\"loading\":\"NewCommentForm_loading__3X58L\",\"control\":\"NewCommentForm_control__2agaE\",\"actions\":\"NewCommentForm_actions__1bM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3oCJ9\",\"sorting\":\"QuoteList_sorting__1B0O1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3NsJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2pqrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2kQkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1y95f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__18nD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2vVUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__25eOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2pLHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2aQ-J\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n      {/* <Link to={'/quotes'} className=''>\n        Delete\n      </Link> */}\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes=(quotes,Ascending)=>{\n  return quotes.sort((quoteA,quoteB)=>{\n  if(Ascending){\n    return quoteA.id> quoteB.id?1:-1;\n  }\n  else{\n    return quoteA.id< quoteB.id? 1:-1;\n  }\n\n  })\n}\n\nconst QuoteList = (props) => {\n const history= useHistory()\n const location= useLocation()\n const queryParams= new URLSearchParams(location.search);\n const isSortingAscending= queryParams.get('sort')===\"asc\";\n const sortedQuotes= sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler=()=>{\nhistory.push('/quotes?sort='+(isSortingAscending ? 'desc':'asc'))\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending? 'Descending':'Ascending'} </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to= '/new-quotes'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-e516d-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from './../quotes/QuoteList'\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport NoQuotesFound from '../quotes/NoQuotesFound';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getAllQuotes } from '../../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n    getAllQuotes,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState} from 'react';\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css';\nimport Card from '../UI/Card'\nimport { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const[isEnterd, setisEnterd]= useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishEnteringHandler=()=>{\n    setisEnterd(false)\n  }\n  const formFocusHandler=()=>{\n    setisEnterd(true);\n  }\n\n  return (\n    <Card>\n      <Prompt when={isEnterd} message={(location)=>\"Are you sure you want to leave?\"}/>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport QuoteForm from '../quotes/QuoteForm'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useHttp from '../../hooks/use-http';\r\nimport {addQuote} from '../../lib/api'\r\n\r\nfunction NewQuotes() {\r\n    const {sendRequest, status}=useHttp(addQuote)\r\n   const history= useHistory();\r\n   useEffect(()=>{\r\n    if(status==='completed'){\r\n        history.push('/quotes')\r\n    }\r\n},[status, history])\r\n   function onAddQuoteHandler(quoteData)\r\n    {\r\n        sendRequest(quoteData)\r\n        console.log(quoteData)\r\n    \r\n       \r\n    };\r\n    return (\r\n        <div>\r\n            <QuoteForm isLoading={status===\"pending\"}onAddQuote={onAddQuoteHandler}></QuoteForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewQuotes\r\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const{sendRequest, status, error}= useHttp(addComment);\n  const{onAddedComment }=props;\n  useEffect(()=>{\n    if(status==='completed' && !error)\n    {\n      onAddedComment();\n    }\n  },[status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText= commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({commentData:{ text: enteredText}, quoteId:props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status==='pending'&& <div className=\"centered\">\n        <LoadingSpinner/>\n        </div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React,{useEffect} from 'react'\r\nimport { useParams,Route,Link ,useRouteMatch} from 'react-router-dom'\r\nimport Comments from '../comments/Comments'\r\nimport HighlightedQuote from '../quotes/HighlightedQuote'\r\nimport useHttp from '../../hooks/use-http'\r\nimport {getSingleQuote} from '../../lib/api'\r\nimport LoadingSpinner from '../UI/LoadingSpinner'\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n  \r\n    const { quoteId } = params;\r\n  \r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n      getSingleQuote,\r\n      true\r\n    );\r\n  \r\n    useEffect(() => {\r\n      sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n  \r\n    if (status === 'pending') {\r\n      return (\r\n        <div className='centered'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    if (error) {\r\n      return <p className='centered'>{error}</p>;\r\n    }\r\n  \r\n    if (!loadedQuote.text) {\r\n      return <p>No quote found!</p>;\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n        <Route path={match.path} exact>\r\n          <div className='centered'>\r\n            <Link className='btn--flat' to={`${match.url}/comments`}>\r\n              Load Comments\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n    </>\r\n    );\r\n  };\r\n  \r\n  export default QuoteDetail;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './MainNavigation.module.css'\r\nfunction MainNavigation() {\r\n    return (\r\n        <header className={classes.header}>\r\n        <div className={classes.logo}>Great Quotes</div>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li><NavLink to ='/quotes' activeClassName={classes.active}>All Quotes</NavLink></li>\r\n            </ul>\r\n            <li><NavLink to ='/new-quotes' activeClassName={classes.active}>Add a Quote</NavLink></li>\r\n        </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation\r\n","import React from 'react'\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\nfunction Layout(props) {\r\n    return (\r\n        <div>\r\n            <MainNavigation></MainNavigation>\r\n            <main className={classes.main}>{props.children}</main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className='centered'>\r\n            <p>Page not found</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import {Route,Switch,Redirect} from 'react-router-dom'\nimport AllQuotes from './components/pages/AllQuotes';\nimport NewQuotes from './components/pages/NewQuotes';\nimport QuoteDetails from './components/pages/QuoteDetails';\nimport Layout from './components/layout/Layout';\nimport NotFound from './components/pages/NotFound';\nfunction App() {\n  return (\n    <div>\n      <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to ='/quotes' exact/>\n        </Route>\n      <Route path='/quotes' exact >\n        <AllQuotes></AllQuotes>\n      </Route>\n      <Route path='/quotes/:quoteId'>\n      <QuoteDetails></QuoteDetails> \n      </Route>\n      <Route path='/new-quotes'>\n      <NewQuotes></NewQuotes>\n      </Route>\n      <Route path='*'>\n        <NotFound/>\n      </Route>\n      </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));"],"sourceRoot":""}